{"name":"Assetsbundle","tagline":" AssetsBundle is module for ZF2 allowing asset managment (bundling & caching)","body":"AssetsBundle\r\n=======\r\n\r\n[![Build Status](https://travis-ci.org/neilime/zf2-assets-bundle.png?branch=master)](https://travis-ci.org/neilime/zf2-assets-bundle)\r\n\r\nCreated by Neilime\r\n\r\nIntroduction\r\n------------\r\n\r\nAssetsBundle is module for ZF2 allowing asset managment (bundling & caching) like Css, Js and Less, dependent on modules, controllers and actions (di). \r\nThis module manages the concept of the environment/production development.\r\n\r\nIn developpement : \r\n - Files are not bundling for easier debugging.\r\n - Less files are compiled when updated or if an \"@import\" inside is updated\r\n \r\nIn production :\r\n \r\n - All files are bundling and cached one time only if needed.\r\n\r\nP.S. Sorry for my english. If You wish to help me with this project or correct my english description - You are welcome :)\r\n\r\nRequirements\r\n------------\r\n\r\n* [Zend Framework 2](https://github.com/zendframework/zf2) (latest master)\r\n* [lessphp](https://github.com/Nodge/lessphp) (latest master).\r\n* [CssMin](https://github.com/neilime/CssMin) (latest master).\r\n* [JsMin](https://github.com/nick4fake/JsMin) (latest master).\r\n\r\nInstallation\r\n------------\r\n\r\n### Main Setup\r\n\r\n#### By cloning project\r\n\r\n1. Install the [lessphp fork](https://github.com/Nodge/lessphp) (latest master), [CssMin fork](https://github.com/neilime/CssMin), [JsMin](https://github.com/nick4fake/JsMin) by cloning them into `./vendor/`.\r\n2. Clone this project into your `./vendor/` directory.\r\n\r\n#### With composer\r\n\r\n1. Add this project in your composer.json:\r\n\r\n    ```json\r\n    \"require\": {\r\n        \"neilime/zf2-assets-bundle\": \"dev-master\"\r\n    }\r\n    ```\r\n\r\n2. Now tell composer to download AssetsBundle by running the command:\r\n\r\n    ```bash\r\n    $ php composer.phar update\r\n    ```\r\n\r\n#### Post installation\r\n\r\n1. Enabling it in your `application.config.php`file.\r\n\r\n    ```php\r\n    <?php\r\n    return array(\r\n        'modules' => array(\r\n            // ...\r\n            'AssetsBundle',\r\n        ),\r\n        // ...\r\n    );\r\n    ```\r\n    \r\n# How to use _AssetsBundle_\r\n\r\n## Simple configuration example\r\n\r\nThis example shows how to convert \"ZF2 Skeleton Application\" to manage assets via AssetsBundle.\r\n\r\n1. After installing skeleton application, install _AssetsBundle_ as explained above.\r\n\r\n2. Then just create cache directory into \"public/\".\r\n  ```bash\r\n  cd to/your/project/public/dir/\r\n  mkdir cache\r\n  ```\r\n3. Edit the application module configuration file `module/Application/config/module.config.php`, adding the configuration fragment below:\r\n\t\r\n\t```php\r\n\t<?php\r\n\treturn array(\r\n\t\t//...\r\n\t\t'asset_bundle' => array(\r\n\t    \t'assets' => array(\r\n    \t\t\t'css' => array('css'),\r\n    \t\t\t'js' => array(\r\n    \t\t\t\t'js/jquery.min.js',\r\n    \t\t\t\t'js/bootstrap.min.js'\r\n    \t\t\t),\r\n    \t\t\t'media' => array('images')\r\n\t    \t)\r\n\t    ),\r\n\t    //...\r\n\t);\r\n\t```\r\n4. Edit layout file `module/Application/view/layout/layout.phtml`, removing prepend function for assets:\r\n\t```php\r\n\t <?php\r\n\t//Remove these lines\r\n\t\r\n\t->prependStylesheet($this->basePath() . '/css/bootstrap-responsive.min.css')\r\n\t->prependStylesheet($this->basePath() . '/css/style.css')\r\n\t->prependStylesheet($this->basePath() . '/css/bootstrap.min.css')\r\n\t\r\n\t ->prependFile($this->basePath() . '/js/bootstrap.min.js')\r\n     ->prependFile($this->basePath() . '/js/jquery.min.js')\r\n     ```\r\n5. Save & Resfresh.\r\n\r\n# Configuration\r\n\r\nThe default configuration is setup to run with \"Application ZF2 Skeleton\"\r\n\r\n1. _AssetsBundle_ :\r\n\r\n * boolean `production`: Define the application environment (development => false). Default true.\r\n * string `basePath` : (optionnal) only needed if \"cacheUrl\" use \"@zfBaseUrl\". If undefined, \\Zend\\Http\\PhpEnvironment\\Request::getBasePath() is used\r\n * string `cachePath` : cache directory absolute path, you can use the \"@zfRootPath\" constant corresponding to current working directory. Default \"@zfRootPath/public/cache\".\r\n * string `assetsPath` : assets directory absolute path, allows you to define relative path for assets config. You can use the constant \"@zfRootPath\" corresponding to current working directory. Default \"@zfRootPath/public\".\r\n * string `cacheUrl` : cache directory base url, you can use the constant \"@zfBaseUrl\" corresponding to application base url . Default \"@zfBaseUrl/assets/cache/\".\r\n * array `mediaExt` : Put here all medias extensions to be cached. Default array('jpg','png','gif','cur','ttf','eot','svg','woff').\r\n\r\n2. Assets :\r\n\r\n You can define assets for controllers / action\r\n \r\n Exemple : \r\n \r\n \t```php\r\n\t<?php\r\n\treturn array(\r\n\t\t//...\r\n    \t'assets' => array(\r\n    \t\t\t//Common assets    \t\t\t\r\n    \t\t\t'css' => array(), //Define css files to include\r\n    \t\t\t'js' => array(), //Define js files to include\r\n    \t\t\t'less' => array(), //Define less files to include\r\n    \t\t\t'media' => array() //Define images to manage\r\n    \t\t\t    \t\t\t\r\n    \t\t\t//Controller assets\r\n    \t\t\t'Test/Controller/Name' => array(\r\n    \t\t\t\t'css' => array(),\r\n\t    \t\t\t'js' => array(),\r\n\t    \t\t\t'less' => array(), \r\n\t    \t\t\t'media' => array()\r\n\t    \t\t\t\r\n\t    \t\t\t//Action assets\r\n\t    \t\t\t'ActionName'=> array(\r\n\t    \t\t\t\t'css' => array(),\r\n\t\t    \t\t\t'js' => array(),\r\n\t\t    \t\t\t'less' => array(), \r\n\t\t    \t\t\t'media' => array()\r\n    \t\t\t\t)\r\n    \t\t\t)\r\n    \t\t\t//...\r\n    \t\t)\r\n\t    ),\r\n\t    //...\r\n\t);\r\n\t```\r\n\t\r\n\tFor each asset, you can specify files or directories. All these elements are related to the asset path by default, \r\n\tbut you can specify an absolute path or use the constants \"@zfAssetsPath\" and \"@zfRootPath\".\r\n\tIf you specify a directory, all files matching the asset type (css, less, js, media) will be included.\r\n\tYou can define an inclusion order like this :\r\n\t\r\n\t```php\r\n\t<?php\r\n\treturn array(\r\n\t\t//...\r\n    \t'assets' => array(\r\n\t\t\t'js' => array('js/firstFile.js','js'),\r\n\t\t\t//...\r\n    \t)    \t\t\t\r\n    \t//...\r\n    );\r\n    ```\r\n    \r\n   \tThis example includes the file \"firstFile.js\" first, and all other javascript files in the folder \"js\"\r\n   \t\r\n3. Custom Js :\r\n\r\n\tThis function allows you to dynamically include javascript files. For exemple, files specific to a user settings.\r\n\tIn this case, your controller that need these file have to extends \"AssetsBundle\\Mvc\\ControllerAbstractActionController\".\r\n\t\r\n\tThen create a jscustomAction function into your controller : \r\n\t\r\n\t```php\r\n\t<?php\r\n\tpublic function jscustomAction($sAction = null){\r\n    \t$aConfiguration = $this->getServiceLocator()->get('config');\r\n    \tif(!isset($aConfiguration['asset_bundle']))throw new \\Exception('AssetBundle config is not defined');\r\n    \tif(empty($sAction)){\r\n    \t\t//Test if you are in production\r\n    \t\tif(!$aConfiguration['asset_bundle']['production'])throw new \\Exception('action must be defined in development mode');\r\n    \t\t$sAction = $this->params('js_action');\r\n    \t\tif(empty($sAction))throw new \\Exception('Action is not defined');\r\n    \t\t$bReturnFiles = false;\r\n    \t}\r\n    \telse $bReturnFiles = true;\r\n    \t$aJsFiles = array();\r\n\r\n    \tswitch($sAction){\r\n    \t\tcase 'application':\r\n\t\t\t\t//Here you can specify js files to include\r\n\t\t\t\t$aJsFiles[] = 'js/dynamicFile.js';\r\n    \t\t\tbreak;\r\n    \t}\r\n    \tif($bReturnFiles)return $aJsFiles;\r\n    \telse{\r\n    \t\t$this->layout()->jsFiles = $aJsFiles;\r\n    \t\treturn false;\r\n    \t}\r\n    }\r\n\t```\r\n\r\n\tEdit layout file:\r\n\t\t\r\n\t```php\r\n\t//Into head\r\n\tif(!empty($this->jsCustomUrl))$this->plugin('InlineScript')->appendFile($this->jsCustomUrl.'?'.time());//Set time() force browser not to cache file, it's not mandatory\r\n\telseif(is_array($this->jsCustomFiles))foreach($this->jsCustomFiles as $sJsCustomFile){\r\n\t\t$this->plugin('InlineScript')->appendFile($sJsCustomFile.'?'.time());//Set time() force browser not to cache file, it's not mandatory\r\n\t}\r\n\t```\r\n\t\r\n# Tools\r\n\r\n_AssetsBundle_ provides console tools.\r\n\r\n## Features\r\n\r\n    Rendering all assets\r\n    Empty cache directory\r\n\r\n## Usage\r\n\r\n### Rendering all assets\r\n\r\n    zf.php render\r\n    \r\n### Empty cache directory\r\n\r\n    zf.php empty     ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}